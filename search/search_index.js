var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":""},{"location":"index.html#home","title":"Home","text":"<p>Warning</p> <p>This is nowhere near completion yet! I'm pushing this as a test.</p> <p>This guide is my personal take on an all-purpose guide that's geared towards making newcomers understand the mechanics of Brickadia in a more simplified manner.</p> <p>This guide does not cover the highly technical aspects of the game, like setting up a server or installing the game. Please refer to other communities for technical advice.</p> <p>This is a part-time project I'm investing in. I am not obligated to instantly update the guide after seconds of new updates coming out. Be mindful of your requests.</p> <p>Feedback can be given on the Github repository.</p>"},{"location":"FAQ/general.html","title":"General","text":""},{"location":"FAQ/general.html#general","title":"General","text":"<p>Common answers to common questions about the general aspect of the game.</p> <p>Please use the menu/sidebar to browse FAQs about wires or any other non-general aspects of the game.</p>"},{"location":"FAQ/general.html#storefronts","title":"Storefronts","text":"<p>Brickadia is currently exclusive to the Steam storefront with the price of $30 and is Early Access at the time of writing.</p> <p></p> <p>An in-game account is required, but you will be able to create one in-game. There are no restrictions, DRM or encryptions that come along with the game. This game can be played offline in offline mode.</p>"},{"location":"FAQ/general.html#platforms","title":"Platforms","text":"<p>Brickadia is currently available on these platforms:</p> <ul> <li> Windows - Windows 10 or higher. Windows 11 is recommended.</li> <li> Linux - ran through Proton, as the developers have stated it ran better than the native Linux build</li> </ul>"},{"location":"FAQ/general.html#performance","title":"Performance","text":"<p>Brickadia runs on Unreal Engine 5.</p> <p>A gaming-class card with 4GB of video memory or more, 12GB system memory or more and a adequate modern processor of 6 or more cores is recommended. Modern systems will support and take advantage of DirectX 12 with no issue. For older systems, I recommend DirectX 11 for better performance on those systems. For systems with inadequate CPU or GPU, the Simple Graphics option serves as a fallback option in case of catastrophic performance. You wouldn't explode a potato.</p> <p>An aspect ratio of 16:9 is ideal as the UI is built for wide-screen and will down-size if you choose something like 4:3. Brickadia also supports capping at framerates higher than 60 for those with displays of higher refresh rate. It also has an unfocused framerate cap, which will help save on GPU resources if you are working on something else while Brickadia is open in the background.</p> <p>You can expect varying levels of performance due to the natural variance of servers and worlds, meaning there is no central benchmark. Some worlds or servers will be heavy on performance, and some may be light enough to be able to run on integrated graphics without going under tolerable framerates.</p>"},{"location":"FAQ/general.html#social","title":"Social","text":"<p>You can follow or interact the official Brickadia social media accounts here:</p> <ul> <li>TikTok</li> <li>Youtube</li> <li>Twitter ...or X but I will give you a side eye</li> <li>Instagram</li> <li>Bluesky</li> <li>Reddit</li> </ul>"},{"location":"FAQ/general.html#forums","title":"Forums","text":"<p>We have a Discord, but no forum yet. Any other forum is unofficial and not affiliated with the official team working with the game.</p> <p>In the Discord, you can ask questions about the game and showcase your projects.</p>"},{"location":"Wires/Gates/Math%20Gates.html","title":"Math Gates","text":""},{"location":"Wires/Gates/Math%20Gates.html#math-gates","title":"Math Gates","text":"<p>These gates are based on real-world mathematics. You will need ample knowledge to use these gates itself, so it is recommended you recap or read on real-world mathematics fundamentals.</p> <p>Note</p> <p>If you often struggle with mathematics or have dyscalculia, these gates may not be suitable for your usage. In this case, you might want to ask for the help of someone else to guide you through these gates.</p>"},{"location":"Wires/Gates/Math%20Gates.html#add","title":"Add","text":"<p>This gate outputs the sum of both inputs (\\(\\text{Input A} + \\text{Input B} = \\text{Output}\\)).</p> <p></p> <p>This gate will add or subtract based on Input B.</p> <ul> <li>If Input B is positive, the gate will do addition as normal.  \\(A + B = \\text{Output}\\)</li> <li>If Input B is negative, the gate will do subtraction instead.  \\((A + -B) \\rightarrow (A - B) = \\text{Output}\\)</li> </ul> <p>These rules do not apply to Input A. Input A can either be positive or negative without any effect to the functionality.</p>"},{"location":"Wires/Gates/Math%20Gates.html#subtract","title":"Subtract","text":"<p>This gate outputs the product of subtracting Input A with Input B (\\(\\text{Input A} - \\text{Input B} = \\text{Output}\\)).</p> <p></p> <p>This gate will subtract or add based on Input B.</p> <ul> <li>If Input B is positive, the gate will do subtraction as normal.  \\(A - B = \\text{Output}\\)</li> <li>If Input B is negative, the gate will do addition instead.  \\((A - -B) \\rightarrow (A + B) = \\text{Output}\\)</li> </ul> <p>These rules do not apply to Input A. Input A can either be positive or negative without any effect to the functionality.</p>"},{"location":"Wires/Gates/Math%20Gates.html#multiply","title":"Multiply","text":"<p>This gate outputs the product of multiplying both inputs (\\(\\text{Input A} \\times \\text{Input B} = \\text{Output}\\)).</p> <p></p> <ul> <li>If the inputs are both positive or negative, the output always comes out as positive.</li> <li>If either individual input has a negative value and the other has a positive value, the output always comes out as negative.</li> </ul>"},{"location":"Wires/Gates/Math%20Gates.html#using-multiply-for-division","title":"Using Multiply for division","text":"<p>You can insert float values containing decimals to multiply with other values, which may prove useful in scenarios where using Multiply gates over Divide gates are preferred.</p> <p></p>"},{"location":"Wires/Gates/Math%20Gates.html#using-multiply-for-exponents","title":"Using Multiply for exponents","text":"<p>For the power of 2, you need to connect the same wire containing the value to both inputs of the Multiply gate.</p> <p>Shown in this example is \\(4^2\\), alternatively read as 4 to the power of 2.</p> <p></p> <p>You will need to chain 2 Multiply gates or more to handle operations involving exponents that are above 2.</p> <p>This example achieves \\(8^2\\), \\(8^3\\) and \\(8^4\\), all in one circuit.</p> <p></p>"},{"location":"Wires/Gates/Math%20Gates.html#divide","title":"Divide","text":"<p>This gate outputs the product of dividing both inputs (\\(\\text{Input A} \\div \\text{Input B} = \\text{Output}\\)). Division can also be represented by using fractions.</p> <p></p> <ul> <li>If the inputs are both positive or negative, the output always comes out as positive.</li> <li>If either individual input has a negative value and the other has a positive value, the output always comes out as negative.</li> </ul>"},{"location":"Wires/Gates/Math%20Gates.html#using-divide-for-multiplication","title":"Using Divide for multiplication","text":"<p>You can insert float values containing decimals to divide with other values, which may prove useful in scenarios where using Divide gates over Multiply gates are preferred.</p> <p></p>"},{"location":"Wires/Gates/Math%20Gates.html#blend","title":"Blend","text":"<p>This gate is based on linear interpolation (alternatively called a Lerp).</p> <p>The linear interpolation formula:</p> \\[y = y_{0} + (x-x_{0})\\frac{y_{1}-y_{0}}{x_{1}-x_{0}}\\]"},{"location":"Wires/Gates/Math%20Gates.html#modulo","title":"Modulo","text":""},{"location":"Wires/Gates/Math%20Gates.html#modulo-floor","title":"Modulo Floor","text":"<p>Python modulo</p>"}]}